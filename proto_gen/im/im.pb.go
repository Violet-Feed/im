// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.29.2
// source: proto/im.proto

package im

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TODO:constant
type StatusCode int32

const (
	StatusCode_StatusCode_Not_Use  StatusCode = 0
	StatusCode_Success             StatusCode = 1000
	StatusCode_Server_Error        StatusCode = 1001
	StatusCode_Param_Error         StatusCode = 1002
	StatusCode_OverFrequency_Error StatusCode = 1003
	StatusCode_OverLimit_Error     StatusCode = 1004
	StatusCode_Duplicate_Error     StatusCode = 1005
	StatusCode_RetryTime_Error     StatusCode = 1006
	StatusCode_Not_Found_Error     StatusCode = 1007
)

// Enum value maps for StatusCode.
var (
	StatusCode_name = map[int32]string{
		0:    "StatusCode_Not_Use",
		1000: "Success",
		1001: "Server_Error",
		1002: "Param_Error",
		1003: "OverFrequency_Error",
		1004: "OverLimit_Error",
		1005: "Duplicate_Error",
		1006: "RetryTime_Error",
		1007: "Not_Found_Error",
	}
	StatusCode_value = map[string]int32{
		"StatusCode_Not_Use":  0,
		"Success":             1000,
		"Server_Error":        1001,
		"Param_Error":         1002,
		"OverFrequency_Error": 1003,
		"OverLimit_Error":     1004,
		"Duplicate_Error":     1005,
		"RetryTime_Error":     1006,
		"Not_Found_Error":     1007,
	}
)

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}

func (x StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_im_proto_enumTypes[0].Descriptor()
}

func (StatusCode) Type() protoreflect.EnumType {
	return &file_proto_im_proto_enumTypes[0]
}

func (x StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusCode.Descriptor instead.
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{0}
}

type ConversationType int32

const (
	ConversationType_ConversationType_Not_Use ConversationType = 0
	ConversationType_One_Chat                 ConversationType = 1
	ConversationType_Group_Chat               ConversationType = 2
	ConversationType_Service_Chat             ConversationType = 3
	ConversationType_AI_Chat                  ConversationType = 4
	ConversationType_System_Chat              ConversationType = 5
)

// Enum value maps for ConversationType.
var (
	ConversationType_name = map[int32]string{
		0: "ConversationType_Not_Use",
		1: "One_Chat",
		2: "Group_Chat",
		3: "Service_Chat",
		4: "AI_Chat",
		5: "System_Chat",
	}
	ConversationType_value = map[string]int32{
		"ConversationType_Not_Use": 0,
		"One_Chat":                 1,
		"Group_Chat":               2,
		"Service_Chat":             3,
		"AI_Chat":                  4,
		"System_Chat":              5,
	}
)

func (x ConversationType) Enum() *ConversationType {
	p := new(ConversationType)
	*p = x
	return p
}

func (x ConversationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConversationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_im_proto_enumTypes[1].Descriptor()
}

func (ConversationType) Type() protoreflect.EnumType {
	return &file_proto_im_proto_enumTypes[1]
}

func (x ConversationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConversationType.Descriptor instead.
func (ConversationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{1}
}

type MessageType int32

const (
	MessageType_MessageType_Not_Use MessageType = 0
	MessageType_Text                MessageType = 1
	MessageType_Image               MessageType = 2
	MessageType_Video               MessageType = 3
	MessageType_Forward             MessageType = 4
	MessageType_Cmd                 MessageType = 1000
	MessageType_SpecialCmd          MessageType = 1001
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:    "MessageType_Not_Use",
		1:    "Text",
		2:    "Image",
		3:    "Video",
		4:    "Forward",
		1000: "Cmd",
		1001: "SpecialCmd",
	}
	MessageType_value = map[string]int32{
		"MessageType_Not_Use": 0,
		"Text":                1,
		"Image":               2,
		"Video":               3,
		"Forward":             4,
		"Cmd":                 1000,
		"SpecialCmd":          1001,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_im_proto_enumTypes[2].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_proto_im_proto_enumTypes[2]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{2}
}

type CommandType int32

const (
	CommandType_CommandType_Not_Use CommandType = 0
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0: "CommandType_Not_Use",
	}
	CommandType_value = map[string]int32{
		"CommandType_Not_Use": 0,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_im_proto_enumTypes[3].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_proto_im_proto_enumTypes[3]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{3}
}

type SpecialCommandType int32

const (
	SpecialCommandType_SpecialCommandType_Not_Use SpecialCommandType = 0
	SpecialCommandType_Create_Conversation        SpecialCommandType = 1
	SpecialCommandType_Disband_Conversation       SpecialCommandType = 2
	SpecialCommandType_Update_Conversation        SpecialCommandType = 3
	SpecialCommandType_Add_Members                SpecialCommandType = 4
	SpecialCommandType_Remove_Members             SpecialCommandType = 5
)

// Enum value maps for SpecialCommandType.
var (
	SpecialCommandType_name = map[int32]string{
		0: "SpecialCommandType_Not_Use",
		1: "Create_Conversation",
		2: "Disband_Conversation",
		3: "Update_Conversation",
		4: "Add_Members",
		5: "Remove_Members",
	}
	SpecialCommandType_value = map[string]int32{
		"SpecialCommandType_Not_Use": 0,
		"Create_Conversation":        1,
		"Disband_Conversation":       2,
		"Update_Conversation":        3,
		"Add_Members":                4,
		"Remove_Members":             5,
	}
)

func (x SpecialCommandType) Enum() *SpecialCommandType {
	p := new(SpecialCommandType)
	*p = x
	return p
}

func (x SpecialCommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpecialCommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_im_proto_enumTypes[4].Descriptor()
}

func (SpecialCommandType) Type() protoreflect.EnumType {
	return &file_proto_im_proto_enumTypes[4]
}

func (x SpecialCommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpecialCommandType.Descriptor instead.
func (SpecialCommandType) EnumDescriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{4}
}

type BaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    StatusCode `protobuf:"varint,1,opt,name=StatusCode,proto3,enum=StatusCode" json:"StatusCode,omitempty"`
	StatusMessage string     `protobuf:"bytes,2,opt,name=StatusMessage,proto3" json:"StatusMessage,omitempty"`
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{0}
}

func (x *BaseResp) GetStatusCode() StatusCode {
	if x != nil {
		return x.StatusCode
	}
	return StatusCode_StatusCode_Not_Use
}

func (x *BaseResp) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

// TODO:http
type ConversationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortId     *int64                   `protobuf:"varint,1,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	ConId          *string                  `protobuf:"bytes,2,opt,name=con_id,json=conId,proto3,oneof" json:"con_id,omitempty"`
	ConType        *int32                   `protobuf:"varint,3,opt,name=con_type,json=conType,proto3,oneof" json:"con_type,omitempty"`
	UserConIndex   *int64                   `protobuf:"varint,4,opt,name=user_con_index,json=userConIndex,proto3,oneof" json:"user_con_index,omitempty"`
	BadgeCount     *int64                   `protobuf:"varint,5,opt,name=badge_count,json=badgeCount,proto3,oneof" json:"badge_count,omitempty"`
	IsMember       *bool                    `protobuf:"varint,6,opt,name=is_member,json=isMember,proto3,oneof" json:"is_member,omitempty"`
	Members        []*ConversationUserInfo  `protobuf:"bytes,7,rep,name=members,proto3" json:"members,omitempty"`
	ConCoreInfo    *ConversationCoreInfo    `protobuf:"bytes,8,opt,name=con_core_info,json=conCoreInfo,proto3,oneof" json:"con_core_info,omitempty"`
	ConSettingInfo *ConversationSettingInfo `protobuf:"bytes,9,opt,name=con_setting_info,json=conSettingInfo,proto3,oneof" json:"con_setting_info,omitempty"`
}

func (x *ConversationInfo) Reset() {
	*x = ConversationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationInfo) ProtoMessage() {}

func (x *ConversationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationInfo.ProtoReflect.Descriptor instead.
func (*ConversationInfo) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{1}
}

func (x *ConversationInfo) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *ConversationInfo) GetConId() string {
	if x != nil && x.ConId != nil {
		return *x.ConId
	}
	return ""
}

func (x *ConversationInfo) GetConType() int32 {
	if x != nil && x.ConType != nil {
		return *x.ConType
	}
	return 0
}

func (x *ConversationInfo) GetUserConIndex() int64 {
	if x != nil && x.UserConIndex != nil {
		return *x.UserConIndex
	}
	return 0
}

func (x *ConversationInfo) GetBadgeCount() int64 {
	if x != nil && x.BadgeCount != nil {
		return *x.BadgeCount
	}
	return 0
}

func (x *ConversationInfo) GetIsMember() bool {
	if x != nil && x.IsMember != nil {
		return *x.IsMember
	}
	return false
}

func (x *ConversationInfo) GetMembers() []*ConversationUserInfo {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ConversationInfo) GetConCoreInfo() *ConversationCoreInfo {
	if x != nil {
		return x.ConCoreInfo
	}
	return nil
}

func (x *ConversationInfo) GetConSettingInfo() *ConversationSettingInfo {
	if x != nil {
		return x.ConSettingInfo
	}
	return nil
}

type ConversationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConInfo   *ConversationInfo `protobuf:"bytes,1,opt,name=con_info,json=conInfo,proto3,oneof" json:"con_info,omitempty"`
	MsgBodies []*MessageBody    `protobuf:"bytes,2,rep,name=msg_bodies,json=msgBodies,proto3" json:"msg_bodies,omitempty"`
}

func (x *ConversationMessage) Reset() {
	*x = ConversationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMessage) ProtoMessage() {}

func (x *ConversationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMessage.ProtoReflect.Descriptor instead.
func (*ConversationMessage) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{2}
}

func (x *ConversationMessage) GetConInfo() *ConversationInfo {
	if x != nil {
		return x.ConInfo
	}
	return nil
}

func (x *ConversationMessage) GetMsgBodies() []*MessageBody {
	if x != nil {
		return x.MsgBodies
	}
	return nil
}

type MessageSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortId *int64  `protobuf:"varint,1,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	ConId      *string `protobuf:"bytes,2,opt,name=con_id,json=conId,proto3,oneof" json:"con_id,omitempty"`
	ConType    *int32  `protobuf:"varint,3,opt,name=con_type,json=conType,proto3,oneof" json:"con_type,omitempty"`
	MsgType    *int32  `protobuf:"varint,4,opt,name=msg_type,json=msgType,proto3,oneof" json:"msg_type,omitempty"`
	MsgContent *string `protobuf:"bytes,5,opt,name=msg_content,json=msgContent,proto3,oneof" json:"msg_content,omitempty"`
}

func (x *MessageSendRequest) Reset() {
	*x = MessageSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSendRequest) ProtoMessage() {}

func (x *MessageSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSendRequest.ProtoReflect.Descriptor instead.
func (*MessageSendRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{3}
}

func (x *MessageSendRequest) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *MessageSendRequest) GetConId() string {
	if x != nil && x.ConId != nil {
		return *x.ConId
	}
	return ""
}

func (x *MessageSendRequest) GetConType() int32 {
	if x != nil && x.ConType != nil {
		return *x.ConType
	}
	return 0
}

func (x *MessageSendRequest) GetMsgType() int32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *MessageSendRequest) GetMsgContent() string {
	if x != nil && x.MsgContent != nil {
		return *x.MsgContent
	}
	return ""
}

type MessageSendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageSendResponse) Reset() {
	*x = MessageSendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSendResponse) ProtoMessage() {}

func (x *MessageSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSendResponse.ProtoReflect.Descriptor instead.
func (*MessageSendResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{4}
}

type MessageGetByInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserConIndex *int64 `protobuf:"varint,1,opt,name=user_con_index,json=userConIndex,proto3,oneof" json:"user_con_index,omitempty"`
}

func (x *MessageGetByInitRequest) Reset() {
	*x = MessageGetByInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageGetByInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageGetByInitRequest) ProtoMessage() {}

func (x *MessageGetByInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageGetByInitRequest.ProtoReflect.Descriptor instead.
func (*MessageGetByInitRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{5}
}

func (x *MessageGetByInitRequest) GetUserConIndex() int64 {
	if x != nil && x.UserConIndex != nil {
		return *x.UserConIndex
	}
	return 0
}

type MessageGetByInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cons             []*ConversationMessage `protobuf:"bytes,1,rep,name=cons,proto3" json:"cons,omitempty"`
	HasMore          *bool                  `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3,oneof" json:"has_more,omitempty"`
	NextUserConIndex *int64                 `protobuf:"varint,3,opt,name=next_user_con_index,json=nextUserConIndex,proto3,oneof" json:"next_user_con_index,omitempty"`
	UserConIndex     *int64                 `protobuf:"varint,4,opt,name=user_con_index,json=userConIndex,proto3,oneof" json:"user_con_index,omitempty"`
	UserCmdIndex     *int64                 `protobuf:"varint,5,opt,name=user_cmd_index,json=userCmdIndex,proto3,oneof" json:"user_cmd_index,omitempty"`
}

func (x *MessageGetByInitResponse) Reset() {
	*x = MessageGetByInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageGetByInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageGetByInitResponse) ProtoMessage() {}

func (x *MessageGetByInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageGetByInitResponse.ProtoReflect.Descriptor instead.
func (*MessageGetByInitResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{6}
}

func (x *MessageGetByInitResponse) GetCons() []*ConversationMessage {
	if x != nil {
		return x.Cons
	}
	return nil
}

func (x *MessageGetByInitResponse) GetHasMore() bool {
	if x != nil && x.HasMore != nil {
		return *x.HasMore
	}
	return false
}

func (x *MessageGetByInitResponse) GetNextUserConIndex() int64 {
	if x != nil && x.NextUserConIndex != nil {
		return *x.NextUserConIndex
	}
	return 0
}

func (x *MessageGetByInitResponse) GetUserConIndex() int64 {
	if x != nil && x.UserConIndex != nil {
		return *x.UserConIndex
	}
	return 0
}

func (x *MessageGetByInitResponse) GetUserCmdIndex() int64 {
	if x != nil && x.UserCmdIndex != nil {
		return *x.UserCmdIndex
	}
	return 0
}

type MessageGetByConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortId *int64 `protobuf:"varint,1,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	ConIndex   *int64 `protobuf:"varint,2,opt,name=con_index,json=conIndex,proto3,oneof" json:"con_index,omitempty"`
	Limit      *int64 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *MessageGetByConversationRequest) Reset() {
	*x = MessageGetByConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageGetByConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageGetByConversationRequest) ProtoMessage() {}

func (x *MessageGetByConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageGetByConversationRequest.ProtoReflect.Descriptor instead.
func (*MessageGetByConversationRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{7}
}

func (x *MessageGetByConversationRequest) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *MessageGetByConversationRequest) GetConIndex() int64 {
	if x != nil && x.ConIndex != nil {
		return *x.ConIndex
	}
	return 0
}

func (x *MessageGetByConversationRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type MessageGetByConversationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgBodies []*MessageBody `protobuf:"bytes,1,rep,name=msg_bodies,json=msgBodies,proto3" json:"msg_bodies,omitempty"`
}

func (x *MessageGetByConversationResponse) Reset() {
	*x = MessageGetByConversationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageGetByConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageGetByConversationResponse) ProtoMessage() {}

func (x *MessageGetByConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageGetByConversationResponse.ProtoReflect.Descriptor instead.
func (*MessageGetByConversationResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{8}
}

func (x *MessageGetByConversationResponse) GetMsgBodies() []*MessageBody {
	if x != nil {
		return x.MsgBodies
	}
	return nil
}

type MarkReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarkReadRequest) Reset() {
	*x = MarkReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkReadRequest) ProtoMessage() {}

func (x *MarkReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkReadRequest.ProtoReflect.Descriptor instead.
func (*MarkReadRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{9}
}

type MarkReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarkReadResponse) Reset() {
	*x = MarkReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkReadResponse) ProtoMessage() {}

func (x *MarkReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkReadResponse.ProtoReflect.Descriptor instead.
func (*MarkReadResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{10}
}

// TODO:message proto
type MessageBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ConId      *string `protobuf:"bytes,2,opt,name=con_id,json=conId,proto3,oneof" json:"con_id,omitempty"`
	ConShortId *int64  `protobuf:"varint,3,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	ConType    *int32  `protobuf:"varint,4,opt,name=con_type,json=conType,proto3,oneof" json:"con_type,omitempty"`
	MsgId      *int64  `protobuf:"varint,5,opt,name=msg_id,json=msgId,proto3,oneof" json:"msg_id,omitempty"`
	MsgType    *int32  `protobuf:"varint,6,opt,name=msg_type,json=msgType,proto3,oneof" json:"msg_type,omitempty"`
	MsgContent *string `protobuf:"bytes,7,opt,name=msg_content,json=msgContent,proto3,oneof" json:"msg_content,omitempty"`
	CreateTime *int64  `protobuf:"varint,8,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`
	ConIndex   *int64  `protobuf:"varint,9,opt,name=con_index,json=conIndex,proto3,oneof" json:"con_index,omitempty"`
}

func (x *MessageBody) Reset() {
	*x = MessageBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageBody) ProtoMessage() {}

func (x *MessageBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageBody.ProtoReflect.Descriptor instead.
func (*MessageBody) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{11}
}

func (x *MessageBody) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *MessageBody) GetConId() string {
	if x != nil && x.ConId != nil {
		return *x.ConId
	}
	return ""
}

func (x *MessageBody) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *MessageBody) GetConType() int32 {
	if x != nil && x.ConType != nil {
		return *x.ConType
	}
	return 0
}

func (x *MessageBody) GetMsgId() int64 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

func (x *MessageBody) GetMsgType() int32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *MessageBody) GetMsgContent() string {
	if x != nil && x.MsgContent != nil {
		return *x.MsgContent
	}
	return ""
}

func (x *MessageBody) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *MessageBody) GetConIndex() int64 {
	if x != nil && x.ConIndex != nil {
		return *x.ConIndex
	}
	return 0
}

type MessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgBody         *MessageBody `protobuf:"bytes,1,opt,name=msg_body,json=msgBody,proto3,oneof" json:"msg_body,omitempty"`
	ConIndex        *int64       `protobuf:"varint,2,opt,name=con_index,json=conIndex,proto3,oneof" json:"con_index,omitempty"`
	Stored          *bool        `protobuf:"varint,3,opt,name=stored,proto3,oneof" json:"stored,omitempty"`
	UserConIndex    *int64       `protobuf:"varint,4,opt,name=user_con_index,json=userConIndex,proto3,oneof" json:"user_con_index,omitempty"`
	PreUserConIndex *int64       `protobuf:"varint,5,opt,name=pre_user_con_index,json=preUserConIndex,proto3,oneof" json:"pre_user_con_index,omitempty"`
	BadgeCount      *int64       `protobuf:"varint,6,opt,name=badge_count,json=badgeCount,proto3,oneof" json:"badge_count,omitempty"`
	UserCmdIndex    *int64       `protobuf:"varint,7,opt,name=user_cmd_index,json=userCmdIndex,proto3,oneof" json:"user_cmd_index,omitempty"`
	RetryCount      *int32       `protobuf:"varint,8,opt,name=retry_count,json=retryCount,proto3,oneof" json:"retry_count,omitempty"`
}

func (x *MessageEvent) Reset() {
	*x = MessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEvent) ProtoMessage() {}

func (x *MessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEvent.ProtoReflect.Descriptor instead.
func (*MessageEvent) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{12}
}

func (x *MessageEvent) GetMsgBody() *MessageBody {
	if x != nil {
		return x.MsgBody
	}
	return nil
}

func (x *MessageEvent) GetConIndex() int64 {
	if x != nil && x.ConIndex != nil {
		return *x.ConIndex
	}
	return 0
}

func (x *MessageEvent) GetStored() bool {
	if x != nil && x.Stored != nil {
		return *x.Stored
	}
	return false
}

func (x *MessageEvent) GetUserConIndex() int64 {
	if x != nil && x.UserConIndex != nil {
		return *x.UserConIndex
	}
	return 0
}

func (x *MessageEvent) GetPreUserConIndex() int64 {
	if x != nil && x.PreUserConIndex != nil {
		return *x.PreUserConIndex
	}
	return 0
}

func (x *MessageEvent) GetBadgeCount() int64 {
	if x != nil && x.BadgeCount != nil {
		return *x.BadgeCount
	}
	return 0
}

func (x *MessageEvent) GetUserCmdIndex() int64 {
	if x != nil && x.UserCmdIndex != nil {
		return *x.UserCmdIndex
	}
	return 0
}

func (x *MessageEvent) GetRetryCount() int32 {
	if x != nil && x.RetryCount != nil {
		return *x.RetryCount
	}
	return 0
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ConShortId *int64  `protobuf:"varint,2,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	ConId      *string `protobuf:"bytes,3,opt,name=con_id,json=conId,proto3,oneof" json:"con_id,omitempty"`
	ConType    *int32  `protobuf:"varint,4,opt,name=con_type,json=conType,proto3,oneof" json:"con_type,omitempty"`
	MsgType    *int32  `protobuf:"varint,5,opt,name=msg_type,json=msgType,proto3,oneof" json:"msg_type,omitempty"`
	MsgContent *string `protobuf:"bytes,6,opt,name=msg_content,json=msgContent,proto3,oneof" json:"msg_content,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{13}
}

func (x *SendMessageRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *SendMessageRequest) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *SendMessageRequest) GetConId() string {
	if x != nil && x.ConId != nil {
		return *x.ConId
	}
	return ""
}

func (x *SendMessageRequest) GetConType() int32 {
	if x != nil && x.ConType != nil {
		return *x.ConType
	}
	return 0
}

func (x *SendMessageRequest) GetMsgType() int32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *SendMessageRequest) GetMsgContent() string {
	if x != nil && x.MsgContent != nil {
		return *x.MsgContent
	}
	return ""
}

type SendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{14}
}

func (x *SendMessageResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type GetMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortId *int64  `protobuf:"varint,1,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	MsgIds     []int64 `protobuf:"varint,2,rep,packed,name=msg_ids,json=msgIds,proto3" json:"msg_ids,omitempty"`
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{15}
}

func (x *GetMessagesRequest) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *GetMessagesRequest) GetMsgIds() []int64 {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

type GetMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgBodies []*MessageBody `protobuf:"bytes,1,rep,name=msg_bodies,json=msgBodies,proto3" json:"msg_bodies,omitempty"`
	BaseResp  *BaseResp      `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *GetMessagesResponse) Reset() {
	*x = GetMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesResponse) ProtoMessage() {}

func (x *GetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{16}
}

func (x *GetMessagesResponse) GetMsgBodies() []*MessageBody {
	if x != nil {
		return x.MsgBodies
	}
	return nil
}

func (x *GetMessagesResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type SaveMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgBody *MessageBody `protobuf:"bytes,1,opt,name=msg_body,json=msgBody,proto3,oneof" json:"msg_body,omitempty"`
}

func (x *SaveMessageRequest) Reset() {
	*x = SaveMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMessageRequest) ProtoMessage() {}

func (x *SaveMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMessageRequest.ProtoReflect.Descriptor instead.
func (*SaveMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{17}
}

func (x *SaveMessageRequest) GetMsgBody() *MessageBody {
	if x != nil {
		return x.MsgBody
	}
	return nil
}

type SaveMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *SaveMessageResponse) Reset() {
	*x = SaveMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMessageResponse) ProtoMessage() {}

func (x *SaveMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMessageResponse.ProtoReflect.Descriptor instead.
func (*SaveMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{18}
}

func (x *SaveMessageResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

// TODO:conversation proto
type ConversationCoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortId  *int64  `protobuf:"varint,1,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	ConId       *string `protobuf:"bytes,2,opt,name=con_id,json=conId,proto3,oneof" json:"con_id,omitempty"`
	ConType     *int32  `protobuf:"varint,3,opt,name=con_type,json=conType,proto3,oneof" json:"con_type,omitempty"`
	Name        *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	AvatarUri   *string `protobuf:"bytes,5,opt,name=avatar_uri,json=avatarUri,proto3,oneof" json:"avatar_uri,omitempty"`
	Description *string `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Notice      *string `protobuf:"bytes,7,opt,name=notice,proto3,oneof" json:"notice,omitempty"`
	OwnerId     *int64  `protobuf:"varint,8,opt,name=owner_id,json=ownerId,proto3,oneof" json:"owner_id,omitempty"`
	CreateTime  *int64  `protobuf:"varint,9,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`
	ModifyTime  *int64  `protobuf:"varint,10,opt,name=modify_time,json=modifyTime,proto3,oneof" json:"modify_time,omitempty"`
	Status      *int32  `protobuf:"varint,11,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Extra       *string `protobuf:"bytes,12,opt,name=extra,proto3,oneof" json:"extra,omitempty"`
	MemberCount *int32  `protobuf:"varint,13,opt,name=member_count,json=memberCount,proto3,oneof" json:"member_count,omitempty"`
}

func (x *ConversationCoreInfo) Reset() {
	*x = ConversationCoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationCoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationCoreInfo) ProtoMessage() {}

func (x *ConversationCoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationCoreInfo.ProtoReflect.Descriptor instead.
func (*ConversationCoreInfo) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{19}
}

func (x *ConversationCoreInfo) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *ConversationCoreInfo) GetConId() string {
	if x != nil && x.ConId != nil {
		return *x.ConId
	}
	return ""
}

func (x *ConversationCoreInfo) GetConType() int32 {
	if x != nil && x.ConType != nil {
		return *x.ConType
	}
	return 0
}

func (x *ConversationCoreInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ConversationCoreInfo) GetAvatarUri() string {
	if x != nil && x.AvatarUri != nil {
		return *x.AvatarUri
	}
	return ""
}

func (x *ConversationCoreInfo) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ConversationCoreInfo) GetNotice() string {
	if x != nil && x.Notice != nil {
		return *x.Notice
	}
	return ""
}

func (x *ConversationCoreInfo) GetOwnerId() int64 {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return 0
}

func (x *ConversationCoreInfo) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *ConversationCoreInfo) GetModifyTime() int64 {
	if x != nil && x.ModifyTime != nil {
		return *x.ModifyTime
	}
	return 0
}

func (x *ConversationCoreInfo) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ConversationCoreInfo) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

func (x *ConversationCoreInfo) GetMemberCount() int32 {
	if x != nil && x.MemberCount != nil {
		return *x.MemberCount
	}
	return 0
}

type ConversationSettingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         *int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ConShortId     *int64  `protobuf:"varint,2,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	ConType        *int32  `protobuf:"varint,3,opt,name=con_type,json=conType,proto3,oneof" json:"con_type,omitempty"`
	MinIndex       *int64  `protobuf:"varint,4,opt,name=min_index,json=minIndex,proto3,oneof" json:"min_index,omitempty"`
	TopTimeStamp   *int64  `protobuf:"varint,5,opt,name=top_time_stamp,json=topTimeStamp,proto3,oneof" json:"top_time_stamp,omitempty"`
	PushStatus     *int32  `protobuf:"varint,6,opt,name=push_status,json=pushStatus,proto3,oneof" json:"push_status,omitempty"`
	ModifyTime     *int64  `protobuf:"varint,7,opt,name=modify_time,json=modifyTime,proto3,oneof" json:"modify_time,omitempty"`
	Extra          *string `protobuf:"bytes,8,opt,name=extra,proto3,oneof" json:"extra,omitempty"`
	ReadIndexEnd   *int64  `protobuf:"varint,9,opt,name=read_index_end,json=readIndexEnd,proto3,oneof" json:"read_index_end,omitempty"`
	ReadBadgeCount *int64  `protobuf:"varint,10,opt,name=read_badge_count,json=readBadgeCount,proto3,oneof" json:"read_badge_count,omitempty"`
}

func (x *ConversationSettingInfo) Reset() {
	*x = ConversationSettingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationSettingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationSettingInfo) ProtoMessage() {}

func (x *ConversationSettingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationSettingInfo.ProtoReflect.Descriptor instead.
func (*ConversationSettingInfo) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{20}
}

func (x *ConversationSettingInfo) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ConversationSettingInfo) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *ConversationSettingInfo) GetConType() int32 {
	if x != nil && x.ConType != nil {
		return *x.ConType
	}
	return 0
}

func (x *ConversationSettingInfo) GetMinIndex() int64 {
	if x != nil && x.MinIndex != nil {
		return *x.MinIndex
	}
	return 0
}

func (x *ConversationSettingInfo) GetTopTimeStamp() int64 {
	if x != nil && x.TopTimeStamp != nil {
		return *x.TopTimeStamp
	}
	return 0
}

func (x *ConversationSettingInfo) GetPushStatus() int32 {
	if x != nil && x.PushStatus != nil {
		return *x.PushStatus
	}
	return 0
}

func (x *ConversationSettingInfo) GetModifyTime() int64 {
	if x != nil && x.ModifyTime != nil {
		return *x.ModifyTime
	}
	return 0
}

func (x *ConversationSettingInfo) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

func (x *ConversationSettingInfo) GetReadIndexEnd() int64 {
	if x != nil && x.ReadIndexEnd != nil {
		return *x.ReadIndexEnd
	}
	return 0
}

func (x *ConversationSettingInfo) GetReadBadgeCount() int64 {
	if x != nil && x.ReadBadgeCount != nil {
		return *x.ReadBadgeCount
	}
	return 0
}

type ConversationUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortId     *int64  `protobuf:"varint,1,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	UserId         *int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	Privilege      *int32  `protobuf:"varint,3,opt,name=privilege,proto3,oneof" json:"privilege,omitempty"`
	NickName       *string `protobuf:"bytes,4,opt,name=nick_name,json=nickName,proto3,oneof" json:"nick_name,omitempty"`
	BlockTimeStamp *int64  `protobuf:"varint,5,opt,name=block_time_stamp,json=blockTimeStamp,proto3,oneof" json:"block_time_stamp,omitempty"`
	Operator       *int64  `protobuf:"varint,6,opt,name=operator,proto3,oneof" json:"operator,omitempty"`
	CreateTime     *int64  `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`
	ModifyTime     *int64  `protobuf:"varint,8,opt,name=modify_time,json=modifyTime,proto3,oneof" json:"modify_time,omitempty"`
	Status         *int32  `protobuf:"varint,9,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Extra          *string `protobuf:"bytes,10,opt,name=extra,proto3,oneof" json:"extra,omitempty"`
}

func (x *ConversationUserInfo) Reset() {
	*x = ConversationUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationUserInfo) ProtoMessage() {}

func (x *ConversationUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationUserInfo.ProtoReflect.Descriptor instead.
func (*ConversationUserInfo) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{21}
}

func (x *ConversationUserInfo) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *ConversationUserInfo) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ConversationUserInfo) GetPrivilege() int32 {
	if x != nil && x.Privilege != nil {
		return *x.Privilege
	}
	return 0
}

func (x *ConversationUserInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *ConversationUserInfo) GetBlockTimeStamp() int64 {
	if x != nil && x.BlockTimeStamp != nil {
		return *x.BlockTimeStamp
	}
	return 0
}

func (x *ConversationUserInfo) GetOperator() int64 {
	if x != nil && x.Operator != nil {
		return *x.Operator
	}
	return 0
}

func (x *ConversationUserInfo) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *ConversationUserInfo) GetModifyTime() int64 {
	if x != nil && x.ModifyTime != nil {
		return *x.ModifyTime
	}
	return 0
}

func (x *ConversationUserInfo) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ConversationUserInfo) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

type CreateConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConId       *string `protobuf:"bytes,1,opt,name=con_id,json=conId,proto3,oneof" json:"con_id,omitempty"`
	ConType     *int32  `protobuf:"varint,2,opt,name=con_type,json=conType,proto3,oneof" json:"con_type,omitempty"`
	Name        *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	AvatarUri   *string `protobuf:"bytes,4,opt,name=avatar_uri,json=avatarUri,proto3,oneof" json:"avatar_uri,omitempty"`
	Description *string `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Notice      *string `protobuf:"bytes,6,opt,name=notice,proto3,oneof" json:"notice,omitempty"`
	OwnerId     *int64  `protobuf:"varint,7,opt,name=owner_id,json=ownerId,proto3,oneof" json:"owner_id,omitempty"`
	Members     []int64 `protobuf:"varint,8,rep,packed,name=members,proto3" json:"members,omitempty"`
	Extra       *string `protobuf:"bytes,9,opt,name=extra,proto3,oneof" json:"extra,omitempty"`
}

func (x *CreateConversationRequest) Reset() {
	*x = CreateConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationRequest) ProtoMessage() {}

func (x *CreateConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationRequest.ProtoReflect.Descriptor instead.
func (*CreateConversationRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{22}
}

func (x *CreateConversationRequest) GetConId() string {
	if x != nil && x.ConId != nil {
		return *x.ConId
	}
	return ""
}

func (x *CreateConversationRequest) GetConType() int32 {
	if x != nil && x.ConType != nil {
		return *x.ConType
	}
	return 0
}

func (x *CreateConversationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateConversationRequest) GetAvatarUri() string {
	if x != nil && x.AvatarUri != nil {
		return *x.AvatarUri
	}
	return ""
}

func (x *CreateConversationRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateConversationRequest) GetNotice() string {
	if x != nil && x.Notice != nil {
		return *x.Notice
	}
	return ""
}

func (x *CreateConversationRequest) GetOwnerId() int64 {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return 0
}

func (x *CreateConversationRequest) GetMembers() []int64 {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CreateConversationRequest) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

type CreateConversationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConInfo  *ConversationCoreInfo `protobuf:"bytes,1,opt,name=con_info,json=conInfo,proto3,oneof" json:"con_info,omitempty"`
	BaseResp *BaseResp             `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *CreateConversationResponse) Reset() {
	*x = CreateConversationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationResponse) ProtoMessage() {}

func (x *CreateConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationResponse.ProtoReflect.Descriptor instead.
func (*CreateConversationResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{23}
}

func (x *CreateConversationResponse) GetConInfo() *ConversationCoreInfo {
	if x != nil {
		return x.ConInfo
	}
	return nil
}

func (x *CreateConversationResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type GetConversationCoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortIds []int64 `protobuf:"varint,1,rep,packed,name=con_short_ids,json=conShortIds,proto3" json:"con_short_ids,omitempty"`
}

func (x *GetConversationCoresRequest) Reset() {
	*x = GetConversationCoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationCoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationCoresRequest) ProtoMessage() {}

func (x *GetConversationCoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationCoresRequest.ProtoReflect.Descriptor instead.
func (*GetConversationCoresRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{24}
}

func (x *GetConversationCoresRequest) GetConShortIds() []int64 {
	if x != nil {
		return x.ConShortIds
	}
	return nil
}

type GetConversationCoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoreInfos []*ConversationCoreInfo `protobuf:"bytes,1,rep,name=core_infos,json=coreInfos,proto3" json:"core_infos,omitempty"`
	BaseResp  *BaseResp               `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *GetConversationCoresResponse) Reset() {
	*x = GetConversationCoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationCoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationCoresResponse) ProtoMessage() {}

func (x *GetConversationCoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationCoresResponse.ProtoReflect.Descriptor instead.
func (*GetConversationCoresResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{25}
}

func (x *GetConversationCoresResponse) GetCoreInfos() []*ConversationCoreInfo {
	if x != nil {
		return x.CoreInfos
	}
	return nil
}

func (x *GetConversationCoresResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type GetConversationSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ConShortIds []int64 `protobuf:"varint,2,rep,packed,name=con_short_ids,json=conShortIds,proto3" json:"con_short_ids,omitempty"`
}

func (x *GetConversationSettingsRequest) Reset() {
	*x = GetConversationSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationSettingsRequest) ProtoMessage() {}

func (x *GetConversationSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetConversationSettingsRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{26}
}

func (x *GetConversationSettingsRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *GetConversationSettingsRequest) GetConShortIds() []int64 {
	if x != nil {
		return x.ConShortIds
	}
	return nil
}

type GetConversationSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SettingInfos []*ConversationSettingInfo `protobuf:"bytes,1,rep,name=setting_infos,json=settingInfos,proto3" json:"setting_infos,omitempty"`
	BaseResp     *BaseResp                  `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *GetConversationSettingsResponse) Reset() {
	*x = GetConversationSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationSettingsResponse) ProtoMessage() {}

func (x *GetConversationSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetConversationSettingsResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{27}
}

func (x *GetConversationSettingsResponse) GetSettingInfos() []*ConversationSettingInfo {
	if x != nil {
		return x.SettingInfos
	}
	return nil
}

func (x *GetConversationSettingsResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type GetConversationMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortId *int64 `protobuf:"varint,1,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	Cursor     *int64 `protobuf:"varint,2,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
	Limit      *int64 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	OnlyId     *bool  `protobuf:"varint,4,opt,name=only_id,json=onlyId,proto3,oneof" json:"only_id,omitempty"`
}

func (x *GetConversationMembersRequest) Reset() {
	*x = GetConversationMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMembersRequest) ProtoMessage() {}

func (x *GetConversationMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMembersRequest.ProtoReflect.Descriptor instead.
func (*GetConversationMembersRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{28}
}

func (x *GetConversationMembersRequest) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *GetConversationMembersRequest) GetCursor() int64 {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return 0
}

func (x *GetConversationMembersRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetConversationMembersRequest) GetOnlyId() bool {
	if x != nil && x.OnlyId != nil {
		return *x.OnlyId
	}
	return false
}

type GetConversationMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfos  []*ConversationUserInfo `protobuf:"bytes,1,rep,name=user_infos,json=userInfos,proto3" json:"user_infos,omitempty"`
	NextCursor *int64                  `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3,oneof" json:"next_cursor,omitempty"`
	BaseResp   *BaseResp               `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *GetConversationMemberResponse) Reset() {
	*x = GetConversationMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMemberResponse) ProtoMessage() {}

func (x *GetConversationMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMemberResponse.ProtoReflect.Descriptor instead.
func (*GetConversationMemberResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{29}
}

func (x *GetConversationMemberResponse) GetUserInfos() []*ConversationUserInfo {
	if x != nil {
		return x.UserInfos
	}
	return nil
}

func (x *GetConversationMemberResponse) GetNextCursor() int64 {
	if x != nil && x.NextCursor != nil {
		return *x.NextCursor
	}
	return 0
}

func (x *GetConversationMemberResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type AddConversationMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortId *int64  `protobuf:"varint,1,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	ConId      *string `protobuf:"bytes,2,opt,name=con_id,json=conId,proto3,oneof" json:"con_id,omitempty"`
	Members    []int64 `protobuf:"varint,3,rep,packed,name=members,proto3" json:"members,omitempty"`
	Operator   *int64  `protobuf:"varint,4,opt,name=operator,proto3,oneof" json:"operator,omitempty"`
}

func (x *AddConversationMembersRequest) Reset() {
	*x = AddConversationMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConversationMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConversationMembersRequest) ProtoMessage() {}

func (x *AddConversationMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConversationMembersRequest.ProtoReflect.Descriptor instead.
func (*AddConversationMembersRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{30}
}

func (x *AddConversationMembersRequest) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *AddConversationMembersRequest) GetConId() string {
	if x != nil && x.ConId != nil {
		return *x.ConId
	}
	return ""
}

func (x *AddConversationMembersRequest) GetMembers() []int64 {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *AddConversationMembersRequest) GetOperator() int64 {
	if x != nil && x.Operator != nil {
		return *x.Operator
	}
	return 0
}

type AddConversationMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *AddConversationMembersResponse) Reset() {
	*x = AddConversationMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConversationMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConversationMembersResponse) ProtoMessage() {}

func (x *AddConversationMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConversationMembersResponse.ProtoReflect.Descriptor instead.
func (*AddConversationMembersResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{31}
}

func (x *AddConversationMembersResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type IncrConversationBadgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ConShortId *int64 `protobuf:"varint,2,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
}

func (x *IncrConversationBadgeRequest) Reset() {
	*x = IncrConversationBadgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrConversationBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrConversationBadgeRequest) ProtoMessage() {}

func (x *IncrConversationBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrConversationBadgeRequest.ProtoReflect.Descriptor instead.
func (*IncrConversationBadgeRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{32}
}

func (x *IncrConversationBadgeRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *IncrConversationBadgeRequest) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

type IncrConversationBadgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BadgeCount *int64    `protobuf:"varint,1,opt,name=badge_count,json=badgeCount,proto3,oneof" json:"badge_count,omitempty"`
	BaseResp   *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *IncrConversationBadgeResponse) Reset() {
	*x = IncrConversationBadgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrConversationBadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrConversationBadgeResponse) ProtoMessage() {}

func (x *IncrConversationBadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrConversationBadgeResponse.ProtoReflect.Descriptor instead.
func (*IncrConversationBadgeResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{33}
}

func (x *IncrConversationBadgeResponse) GetBadgeCount() int64 {
	if x != nil && x.BadgeCount != nil {
		return *x.BadgeCount
	}
	return 0
}

func (x *IncrConversationBadgeResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type GetConversationBadgesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ConShortIds []int64 `protobuf:"varint,2,rep,packed,name=con_short_ids,json=conShortIds,proto3" json:"con_short_ids,omitempty"`
}

func (x *GetConversationBadgesRequest) Reset() {
	*x = GetConversationBadgesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationBadgesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationBadgesRequest) ProtoMessage() {}

func (x *GetConversationBadgesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationBadgesRequest.ProtoReflect.Descriptor instead.
func (*GetConversationBadgesRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{34}
}

func (x *GetConversationBadgesRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *GetConversationBadgesRequest) GetConShortIds() []int64 {
	if x != nil {
		return x.ConShortIds
	}
	return nil
}

type GetConversationBadgesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BadgeCounts []int64   `protobuf:"varint,1,rep,packed,name=badge_counts,json=badgeCounts,proto3" json:"badge_counts,omitempty"`
	BaseResp    *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *GetConversationBadgesResponse) Reset() {
	*x = GetConversationBadgesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationBadgesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationBadgesResponse) ProtoMessage() {}

func (x *GetConversationBadgesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationBadgesResponse.ProtoReflect.Descriptor instead.
func (*GetConversationBadgesResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{35}
}

func (x *GetConversationBadgesResponse) GetBadgeCounts() []int64 {
	if x != nil {
		return x.BadgeCounts
	}
	return nil
}

func (x *GetConversationBadgesResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type SetReadInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         *int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ConShortId     *int64 `protobuf:"varint,2,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	ReadIndexStart *int64 `protobuf:"varint,3,opt,name=read_index_start,json=readIndexStart,proto3,oneof" json:"read_index_start,omitempty"`
	ReadIndexEnd   *int64 `protobuf:"varint,4,opt,name=read_index_end,json=readIndexEnd,proto3,oneof" json:"read_index_end,omitempty"`
	ReadBadgeCount *int64 `protobuf:"varint,5,opt,name=read_badge_count,json=readBadgeCount,proto3,oneof" json:"read_badge_count,omitempty"`
}

func (x *SetReadInfoRequest) Reset() {
	*x = SetReadInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetReadInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReadInfoRequest) ProtoMessage() {}

func (x *SetReadInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReadInfoRequest.ProtoReflect.Descriptor instead.
func (*SetReadInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{36}
}

func (x *SetReadInfoRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *SetReadInfoRequest) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *SetReadInfoRequest) GetReadIndexStart() int64 {
	if x != nil && x.ReadIndexStart != nil {
		return *x.ReadIndexStart
	}
	return 0
}

func (x *SetReadInfoRequest) GetReadIndexEnd() int64 {
	if x != nil && x.ReadIndexEnd != nil {
		return *x.ReadIndexEnd
	}
	return 0
}

func (x *SetReadInfoRequest) GetReadBadgeCount() int64 {
	if x != nil && x.ReadBadgeCount != nil {
		return *x.ReadBadgeCount
	}
	return 0
}

type SetReadInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *SetReadInfoResponse) Reset() {
	*x = SetReadInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetReadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReadInfoResponse) ProtoMessage() {}

func (x *SetReadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReadInfoResponse.ProtoReflect.Descriptor instead.
func (*SetReadInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{37}
}

func (x *SetReadInfoResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

// TODO:index proto
type AppendConversationIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortId *int64 `protobuf:"varint,1,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	MsgId      *int64 `protobuf:"varint,2,opt,name=msg_id,json=msgId,proto3,oneof" json:"msg_id,omitempty"`
}

func (x *AppendConversationIndexRequest) Reset() {
	*x = AppendConversationIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendConversationIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendConversationIndexRequest) ProtoMessage() {}

func (x *AppendConversationIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendConversationIndexRequest.ProtoReflect.Descriptor instead.
func (*AppendConversationIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{38}
}

func (x *AppendConversationIndexRequest) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *AppendConversationIndexRequest) GetMsgId() int64 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

type AppendConversationIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConIndex *int64    `protobuf:"varint,1,opt,name=con_index,json=conIndex,proto3,oneof" json:"con_index,omitempty"`
	BaseResp *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *AppendConversationIndexResponse) Reset() {
	*x = AppendConversationIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendConversationIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendConversationIndexResponse) ProtoMessage() {}

func (x *AppendConversationIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendConversationIndexResponse.ProtoReflect.Descriptor instead.
func (*AppendConversationIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{39}
}

func (x *AppendConversationIndexResponse) GetConIndex() int64 {
	if x != nil && x.ConIndex != nil {
		return *x.ConIndex
	}
	return 0
}

func (x *AppendConversationIndexResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type PullConversationIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortId *int64 `protobuf:"varint,1,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
	ConIndex   *int64 `protobuf:"varint,2,opt,name=con_index,json=conIndex,proto3,oneof" json:"con_index,omitempty"`
	Limit      *int64 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *PullConversationIndexRequest) Reset() {
	*x = PullConversationIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullConversationIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullConversationIndexRequest) ProtoMessage() {}

func (x *PullConversationIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullConversationIndexRequest.ProtoReflect.Descriptor instead.
func (*PullConversationIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{40}
}

func (x *PullConversationIndexRequest) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

func (x *PullConversationIndexRequest) GetConIndex() int64 {
	if x != nil && x.ConIndex != nil {
		return *x.ConIndex
	}
	return 0
}

func (x *PullConversationIndexRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type PullConversationIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgIds       []int64   `protobuf:"varint,1,rep,packed,name=msg_ids,json=msgIds,proto3" json:"msg_ids,omitempty"`
	LastConIndex *int64    `protobuf:"varint,2,opt,name=last_con_index,json=lastConIndex,proto3,oneof" json:"last_con_index,omitempty"`
	BaseResp     *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *PullConversationIndexResponse) Reset() {
	*x = PullConversationIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullConversationIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullConversationIndexResponse) ProtoMessage() {}

func (x *PullConversationIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullConversationIndexResponse.ProtoReflect.Descriptor instead.
func (*PullConversationIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{41}
}

func (x *PullConversationIndexResponse) GetMsgIds() []int64 {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

func (x *PullConversationIndexResponse) GetLastConIndex() int64 {
	if x != nil && x.LastConIndex != nil {
		return *x.LastConIndex
	}
	return 0
}

func (x *PullConversationIndexResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type AppendUserConIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ConShortId *int64 `protobuf:"varint,2,opt,name=con_short_id,json=conShortId,proto3,oneof" json:"con_short_id,omitempty"`
}

func (x *AppendUserConIndexRequest) Reset() {
	*x = AppendUserConIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendUserConIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendUserConIndexRequest) ProtoMessage() {}

func (x *AppendUserConIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendUserConIndexRequest.ProtoReflect.Descriptor instead.
func (*AppendUserConIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{42}
}

func (x *AppendUserConIndexRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *AppendUserConIndexRequest) GetConShortId() int64 {
	if x != nil && x.ConShortId != nil {
		return *x.ConShortId
	}
	return 0
}

type AppendUserConIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserConIndex    *int64    `protobuf:"varint,1,opt,name=user_con_index,json=userConIndex,proto3,oneof" json:"user_con_index,omitempty"`
	PreUserConIndex *int64    `protobuf:"varint,2,opt,name=pre_user_con_index,json=preUserConIndex,proto3,oneof" json:"pre_user_con_index,omitempty"`
	BaseResp        *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *AppendUserConIndexResponse) Reset() {
	*x = AppendUserConIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendUserConIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendUserConIndexResponse) ProtoMessage() {}

func (x *AppendUserConIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendUserConIndexResponse.ProtoReflect.Descriptor instead.
func (*AppendUserConIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{43}
}

func (x *AppendUserConIndexResponse) GetUserConIndex() int64 {
	if x != nil && x.UserConIndex != nil {
		return *x.UserConIndex
	}
	return 0
}

func (x *AppendUserConIndexResponse) GetPreUserConIndex() int64 {
	if x != nil && x.PreUserConIndex != nil {
		return *x.PreUserConIndex
	}
	return 0
}

func (x *AppendUserConIndexResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type PullUserConIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       *int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	UserConIndex *int64 `protobuf:"varint,2,opt,name=user_con_index,json=userConIndex,proto3,oneof" json:"user_con_index,omitempty"`
	Limit        *int64 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *PullUserConIndexRequest) Reset() {
	*x = PullUserConIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullUserConIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullUserConIndexRequest) ProtoMessage() {}

func (x *PullUserConIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullUserConIndexRequest.ProtoReflect.Descriptor instead.
func (*PullUserConIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{44}
}

func (x *PullUserConIndexRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *PullUserConIndexRequest) GetUserConIndex() int64 {
	if x != nil && x.UserConIndex != nil {
		return *x.UserConIndex
	}
	return 0
}

func (x *PullUserConIndexRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type PullUserConIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConShortIds      []int64   `protobuf:"varint,1,rep,packed,name=con_short_ids,json=conShortIds,proto3" json:"con_short_ids,omitempty"`
	LastUserConIndex *int64    `protobuf:"varint,2,opt,name=last_user_con_index,json=lastUserConIndex,proto3,oneof" json:"last_user_con_index,omitempty"`
	NextUserConIndex *int64    `protobuf:"varint,3,opt,name=next_user_con_index,json=nextUserConIndex,proto3,oneof" json:"next_user_con_index,omitempty"`
	HasMore          *bool     `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3,oneof" json:"has_more,omitempty"`
	BaseResp         *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *PullUserConIndexResponse) Reset() {
	*x = PullUserConIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullUserConIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullUserConIndexResponse) ProtoMessage() {}

func (x *PullUserConIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullUserConIndexResponse.ProtoReflect.Descriptor instead.
func (*PullUserConIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{45}
}

func (x *PullUserConIndexResponse) GetConShortIds() []int64 {
	if x != nil {
		return x.ConShortIds
	}
	return nil
}

func (x *PullUserConIndexResponse) GetLastUserConIndex() int64 {
	if x != nil && x.LastUserConIndex != nil {
		return *x.LastUserConIndex
	}
	return 0
}

func (x *PullUserConIndexResponse) GetNextUserConIndex() int64 {
	if x != nil && x.NextUserConIndex != nil {
		return *x.NextUserConIndex
	}
	return 0
}

func (x *PullUserConIndexResponse) GetHasMore() bool {
	if x != nil && x.HasMore != nil {
		return *x.HasMore
	}
	return false
}

func (x *PullUserConIndexResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type AppendUserCmdIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	MsgId  *int64 `protobuf:"varint,2,opt,name=msg_id,json=msgId,proto3,oneof" json:"msg_id,omitempty"`
}

func (x *AppendUserCmdIndexRequest) Reset() {
	*x = AppendUserCmdIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendUserCmdIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendUserCmdIndexRequest) ProtoMessage() {}

func (x *AppendUserCmdIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendUserCmdIndexRequest.ProtoReflect.Descriptor instead.
func (*AppendUserCmdIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{46}
}

func (x *AppendUserCmdIndexRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *AppendUserCmdIndexRequest) GetMsgId() int64 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

type AppendUserCmdIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserCmdIndex *int64    `protobuf:"varint,1,opt,name=user_cmd_index,json=userCmdIndex,proto3,oneof" json:"user_cmd_index,omitempty"`
	BaseResp     *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *AppendUserCmdIndexResponse) Reset() {
	*x = AppendUserCmdIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendUserCmdIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendUserCmdIndexResponse) ProtoMessage() {}

func (x *AppendUserCmdIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendUserCmdIndexResponse.ProtoReflect.Descriptor instead.
func (*AppendUserCmdIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{47}
}

func (x *AppendUserCmdIndexResponse) GetUserCmdIndex() int64 {
	if x != nil && x.UserCmdIndex != nil {
		return *x.UserCmdIndex
	}
	return 0
}

func (x *AppendUserCmdIndexResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type PullUserCmdIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       *int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	UserCmdIndex *int64 `protobuf:"varint,2,opt,name=user_cmd_index,json=userCmdIndex,proto3,oneof" json:"user_cmd_index,omitempty"`
	Limit        *int64 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *PullUserCmdIndexRequest) Reset() {
	*x = PullUserCmdIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullUserCmdIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullUserCmdIndexRequest) ProtoMessage() {}

func (x *PullUserCmdIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullUserCmdIndexRequest.ProtoReflect.Descriptor instead.
func (*PullUserCmdIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{48}
}

func (x *PullUserCmdIndexRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *PullUserCmdIndexRequest) GetUserCmdIndex() int64 {
	if x != nil && x.UserCmdIndex != nil {
		return *x.UserCmdIndex
	}
	return 0
}

func (x *PullUserCmdIndexRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type PullUserCmdIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgIds           []int64   `protobuf:"varint,1,rep,packed,name=msg_ids,json=msgIds,proto3" json:"msg_ids,omitempty"`
	LastUserCmdIndex *int64    `protobuf:"varint,2,opt,name=last_user_cmd_index,json=lastUserCmdIndex,proto3,oneof" json:"last_user_cmd_index,omitempty"`
	BaseResp         *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *PullUserCmdIndexResponse) Reset() {
	*x = PullUserCmdIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullUserCmdIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullUserCmdIndexResponse) ProtoMessage() {}

func (x *PullUserCmdIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullUserCmdIndexResponse.ProtoReflect.Descriptor instead.
func (*PullUserCmdIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{49}
}

func (x *PullUserCmdIndexResponse) GetMsgIds() []int64 {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

func (x *PullUserCmdIndexResponse) GetLastUserCmdIndex() int64 {
	if x != nil && x.LastUserCmdIndex != nil {
		return *x.LastUserCmdIndex
	}
	return 0
}

func (x *PullUserCmdIndexResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

// TODO:push
type PushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgBody         *MessageBody `protobuf:"bytes,1,opt,name=msg_body,json=msgBody,proto3,oneof" json:"msg_body,omitempty"`
	ReceiverId      *int64       `protobuf:"varint,2,opt,name=receiver_id,json=receiverId,proto3,oneof" json:"receiver_id,omitempty"`
	ConIndex        *int64       `protobuf:"varint,3,opt,name=con_index,json=conIndex,proto3,oneof" json:"con_index,omitempty"`
	UserConIndex    *int64       `protobuf:"varint,4,opt,name=user_con_index,json=userConIndex,proto3,oneof" json:"user_con_index,omitempty"`
	PreUserConIndex *int64       `protobuf:"varint,5,opt,name=pre_user_con_index,json=preUserConIndex,proto3,oneof" json:"pre_user_con_index,omitempty"`
	BadgeCount      *int64       `protobuf:"varint,6,opt,name=badge_count,json=badgeCount,proto3,oneof" json:"badge_count,omitempty"`
	UserCmdIndex    *int64       `protobuf:"varint,7,opt,name=user_cmd_index,json=userCmdIndex,proto3,oneof" json:"user_cmd_index,omitempty"`
}

func (x *PushRequest) Reset() {
	*x = PushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRequest) ProtoMessage() {}

func (x *PushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushRequest.ProtoReflect.Descriptor instead.
func (*PushRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{50}
}

func (x *PushRequest) GetMsgBody() *MessageBody {
	if x != nil {
		return x.MsgBody
	}
	return nil
}

func (x *PushRequest) GetReceiverId() int64 {
	if x != nil && x.ReceiverId != nil {
		return *x.ReceiverId
	}
	return 0
}

func (x *PushRequest) GetConIndex() int64 {
	if x != nil && x.ConIndex != nil {
		return *x.ConIndex
	}
	return 0
}

func (x *PushRequest) GetUserConIndex() int64 {
	if x != nil && x.UserConIndex != nil {
		return *x.UserConIndex
	}
	return 0
}

func (x *PushRequest) GetPreUserConIndex() int64 {
	if x != nil && x.PreUserConIndex != nil {
		return *x.PreUserConIndex
	}
	return 0
}

func (x *PushRequest) GetBadgeCount() int64 {
	if x != nil && x.BadgeCount != nil {
		return *x.BadgeCount
	}
	return 0
}

func (x *PushRequest) GetUserCmdIndex() int64 {
	if x != nil && x.UserCmdIndex != nil {
		return *x.UserCmdIndex
	}
	return 0
}

type PushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,255,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *PushResponse) Reset() {
	*x = PushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushResponse) ProtoMessage() {}

func (x *PushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushResponse.ProtoReflect.Descriptor instead.
func (*PushResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{51}
}

func (x *PushResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

var File_proto_im_proto protoreflect.FileDescriptor

var file_proto_im_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5d, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xa3, 0x04, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x63,
	0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x08, 0x69,
	0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x06, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x07, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01,
	0x12, 0x2b, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x83, 0x02, 0x0a, 0x12, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x6d, 0x73, 0x67,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63,
	0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x15, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0xb9, 0x02, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x63, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x4d, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63,
	0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x16,
	0x0a, 0x14, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xae, 0x01, 0x0a,
	0x1f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x4f, 0x0a,
	0x20, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x22, 0x11,
	0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x12, 0x0a, 0x10, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb3, 0x03, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xd2, 0x03, 0x0a, 0x0c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08,
	0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x06,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x04, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x0a, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x07, 0x52, 0x0a,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xad, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05,
	0x63, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x07, 0x6d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x0a, 0x6d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63,
	0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x4f, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x06, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4f, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08,
	0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d,
	0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x4f, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf5, 0x04, 0x0a, 0x14, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x69, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x0a, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x0c, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75,
	0x72, 0x69, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xa9, 0x04, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x0c, 0x74,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x0a, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52,
	0x0c, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x61, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x69,
	0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x6f, 0x70, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x84, 0x04, 0x0a,
	0x14, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52,
	0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2d, 0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x0e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x05, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x0a, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x22, 0x8f, 0x03, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x06, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x75, 0x72, 0x69, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x9a, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x01, 0x52, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x41, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2b, 0x0a, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6e, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0xce, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x06,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x79, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x6e, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x24, 0x0a, 0x0b,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x01, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xc6, 0x01, 0x0a,
	0x1d, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x5a, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x80, 0x01, 0x0a, 0x1c, 0x49, 0x6e, 0x63, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x1d, 0x49, 0x6e, 0x63, 0x72, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x01, 0x52, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0xbc, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d,
	0x0a, 0x10, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a,
	0x0e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x42, 0x61, 0x64, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x65, 0x6e, 0x64, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x4f, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x7f, 0x0a, 0x1e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x6d,
	0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x05, 0x6d,
	0x73, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x69, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x1f, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x01, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xab, 0x01, 0x0a, 0x1c, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0xb0, 0x01, 0x0a, 0x1d, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x01, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88,
	0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x7d, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x22, 0xdd, 0x01, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x12, 0x70,
	0x72, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x02, 0x52, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x15, 0x0a,
	0x13, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xa6, 0x01, 0x0a, 0x17, 0x50, 0x75, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xbd, 0x02, 0x0a, 0x18, 0x50,
	0x75, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x5f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x13, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12,
	0x32, 0x0a, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x10,
	0x6e, 0x65, 0x78, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18,
	0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x03, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01,
	0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6c, 0x0a, 0x19, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x1a, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x01, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0xa6, 0x01, 0x0a, 0x17, 0x50, 0x75, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x18, 0x50, 0x75, 0x6c,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x12, 0x32,
	0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6d, 0x64, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x01, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6d,
	0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0xa9, 0x03, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x04, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x0a,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a,
	0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x62, 0x6f, 0x64, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x48, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2a, 0xc9, 0x01, 0x0a, 0x0a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x4e, 0x6f, 0x74, 0x5f, 0x55, 0x73, 0x65, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0xe8, 0x07, 0x12,
	0x11, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0xe9, 0x07, 0x12, 0x10, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0xea, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x4f, 0x76, 0x65, 0x72, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xeb, 0x07, 0x12, 0x14,
	0x0a, 0x0f, 0x4f, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0xec, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xed, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xee, 0x07,
	0x12, 0x14, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x5f, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0xef, 0x07, 0x2a, 0x7e, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e,
	0x6f, 0x74, 0x5f, 0x55, 0x73, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x6e, 0x65, 0x5f,
	0x43, 0x68, 0x61, 0x74, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x43, 0x68, 0x61, 0x74, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x43, 0x68, 0x61, 0x74, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x49, 0x5f, 0x43,
	0x68, 0x61, 0x74, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x43, 0x68, 0x61, 0x74, 0x10, 0x05, 0x2a, 0x6e, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f, 0x74, 0x5f, 0x55, 0x73, 0x65, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x03, 0x12, 0x0b,
	0x0a, 0x07, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x43,
	0x6d, 0x64, 0x10, 0xe8, 0x07, 0x12, 0x0f, 0x0a, 0x0a, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x43, 0x6d, 0x64, 0x10, 0xe9, 0x07, 0x2a, 0x26, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f, 0x74, 0x5f, 0x55, 0x73, 0x65, 0x10, 0x00, 0x2a, 0xa5,
	0x01, 0x0a, 0x12, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f, 0x74, 0x5f,
	0x55, 0x73, 0x65, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x18,
	0x0a, 0x14, 0x44, 0x69, 0x73, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x5f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x10, 0x05, 0x42, 0x31, 0x0a, 0x20, 0x76, 0x69, 0x6f, 0x6c, 0x65, 0x74,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x69, 0x6d, 0x5a, 0x0d, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_im_proto_rawDescOnce sync.Once
	file_proto_im_proto_rawDescData = file_proto_im_proto_rawDesc
)

func file_proto_im_proto_rawDescGZIP() []byte {
	file_proto_im_proto_rawDescOnce.Do(func() {
		file_proto_im_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_im_proto_rawDescData)
	})
	return file_proto_im_proto_rawDescData
}

var file_proto_im_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_im_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_proto_im_proto_goTypes = []interface{}{
	(StatusCode)(0),                          // 0: StatusCode
	(ConversationType)(0),                    // 1: ConversationType
	(MessageType)(0),                         // 2: MessageType
	(CommandType)(0),                         // 3: CommandType
	(SpecialCommandType)(0),                  // 4: SpecialCommandType
	(*BaseResp)(nil),                         // 5: BaseResp
	(*ConversationInfo)(nil),                 // 6: ConversationInfo
	(*ConversationMessage)(nil),              // 7: ConversationMessage
	(*MessageSendRequest)(nil),               // 8: MessageSendRequest
	(*MessageSendResponse)(nil),              // 9: MessageSendResponse
	(*MessageGetByInitRequest)(nil),          // 10: MessageGetByInitRequest
	(*MessageGetByInitResponse)(nil),         // 11: MessageGetByInitResponse
	(*MessageGetByConversationRequest)(nil),  // 12: MessageGetByConversationRequest
	(*MessageGetByConversationResponse)(nil), // 13: MessageGetByConversationResponse
	(*MarkReadRequest)(nil),                  // 14: MarkReadRequest
	(*MarkReadResponse)(nil),                 // 15: MarkReadResponse
	(*MessageBody)(nil),                      // 16: MessageBody
	(*MessageEvent)(nil),                     // 17: MessageEvent
	(*SendMessageRequest)(nil),               // 18: SendMessageRequest
	(*SendMessageResponse)(nil),              // 19: SendMessageResponse
	(*GetMessagesRequest)(nil),               // 20: GetMessagesRequest
	(*GetMessagesResponse)(nil),              // 21: GetMessagesResponse
	(*SaveMessageRequest)(nil),               // 22: SaveMessageRequest
	(*SaveMessageResponse)(nil),              // 23: SaveMessageResponse
	(*ConversationCoreInfo)(nil),             // 24: ConversationCoreInfo
	(*ConversationSettingInfo)(nil),          // 25: ConversationSettingInfo
	(*ConversationUserInfo)(nil),             // 26: ConversationUserInfo
	(*CreateConversationRequest)(nil),        // 27: CreateConversationRequest
	(*CreateConversationResponse)(nil),       // 28: CreateConversationResponse
	(*GetConversationCoresRequest)(nil),      // 29: GetConversationCoresRequest
	(*GetConversationCoresResponse)(nil),     // 30: GetConversationCoresResponse
	(*GetConversationSettingsRequest)(nil),   // 31: GetConversationSettingsRequest
	(*GetConversationSettingsResponse)(nil),  // 32: GetConversationSettingsResponse
	(*GetConversationMembersRequest)(nil),    // 33: GetConversationMembersRequest
	(*GetConversationMemberResponse)(nil),    // 34: GetConversationMemberResponse
	(*AddConversationMembersRequest)(nil),    // 35: AddConversationMembersRequest
	(*AddConversationMembersResponse)(nil),   // 36: AddConversationMembersResponse
	(*IncrConversationBadgeRequest)(nil),     // 37: IncrConversationBadgeRequest
	(*IncrConversationBadgeResponse)(nil),    // 38: IncrConversationBadgeResponse
	(*GetConversationBadgesRequest)(nil),     // 39: GetConversationBadgesRequest
	(*GetConversationBadgesResponse)(nil),    // 40: GetConversationBadgesResponse
	(*SetReadInfoRequest)(nil),               // 41: SetReadInfoRequest
	(*SetReadInfoResponse)(nil),              // 42: SetReadInfoResponse
	(*AppendConversationIndexRequest)(nil),   // 43: AppendConversationIndexRequest
	(*AppendConversationIndexResponse)(nil),  // 44: AppendConversationIndexResponse
	(*PullConversationIndexRequest)(nil),     // 45: PullConversationIndexRequest
	(*PullConversationIndexResponse)(nil),    // 46: PullConversationIndexResponse
	(*AppendUserConIndexRequest)(nil),        // 47: AppendUserConIndexRequest
	(*AppendUserConIndexResponse)(nil),       // 48: AppendUserConIndexResponse
	(*PullUserConIndexRequest)(nil),          // 49: PullUserConIndexRequest
	(*PullUserConIndexResponse)(nil),         // 50: PullUserConIndexResponse
	(*AppendUserCmdIndexRequest)(nil),        // 51: AppendUserCmdIndexRequest
	(*AppendUserCmdIndexResponse)(nil),       // 52: AppendUserCmdIndexResponse
	(*PullUserCmdIndexRequest)(nil),          // 53: PullUserCmdIndexRequest
	(*PullUserCmdIndexResponse)(nil),         // 54: PullUserCmdIndexResponse
	(*PushRequest)(nil),                      // 55: PushRequest
	(*PushResponse)(nil),                     // 56: PushResponse
}
var file_proto_im_proto_depIdxs = []int32{
	0,  // 0: BaseResp.StatusCode:type_name -> StatusCode
	26, // 1: ConversationInfo.members:type_name -> ConversationUserInfo
	24, // 2: ConversationInfo.con_core_info:type_name -> ConversationCoreInfo
	25, // 3: ConversationInfo.con_setting_info:type_name -> ConversationSettingInfo
	6,  // 4: ConversationMessage.con_info:type_name -> ConversationInfo
	16, // 5: ConversationMessage.msg_bodies:type_name -> MessageBody
	7,  // 6: MessageGetByInitResponse.cons:type_name -> ConversationMessage
	16, // 7: MessageGetByConversationResponse.msg_bodies:type_name -> MessageBody
	16, // 8: MessageEvent.msg_body:type_name -> MessageBody
	5,  // 9: SendMessageResponse.baseResp:type_name -> BaseResp
	16, // 10: GetMessagesResponse.msg_bodies:type_name -> MessageBody
	5,  // 11: GetMessagesResponse.baseResp:type_name -> BaseResp
	16, // 12: SaveMessageRequest.msg_body:type_name -> MessageBody
	5,  // 13: SaveMessageResponse.baseResp:type_name -> BaseResp
	24, // 14: CreateConversationResponse.con_info:type_name -> ConversationCoreInfo
	5,  // 15: CreateConversationResponse.baseResp:type_name -> BaseResp
	24, // 16: GetConversationCoresResponse.core_infos:type_name -> ConversationCoreInfo
	5,  // 17: GetConversationCoresResponse.baseResp:type_name -> BaseResp
	25, // 18: GetConversationSettingsResponse.setting_infos:type_name -> ConversationSettingInfo
	5,  // 19: GetConversationSettingsResponse.baseResp:type_name -> BaseResp
	26, // 20: GetConversationMemberResponse.user_infos:type_name -> ConversationUserInfo
	5,  // 21: GetConversationMemberResponse.baseResp:type_name -> BaseResp
	5,  // 22: AddConversationMembersResponse.baseResp:type_name -> BaseResp
	5,  // 23: IncrConversationBadgeResponse.baseResp:type_name -> BaseResp
	5,  // 24: GetConversationBadgesResponse.baseResp:type_name -> BaseResp
	5,  // 25: SetReadInfoResponse.baseResp:type_name -> BaseResp
	5,  // 26: AppendConversationIndexResponse.baseResp:type_name -> BaseResp
	5,  // 27: PullConversationIndexResponse.baseResp:type_name -> BaseResp
	5,  // 28: AppendUserConIndexResponse.baseResp:type_name -> BaseResp
	5,  // 29: PullUserConIndexResponse.baseResp:type_name -> BaseResp
	5,  // 30: AppendUserCmdIndexResponse.baseResp:type_name -> BaseResp
	5,  // 31: PullUserCmdIndexResponse.baseResp:type_name -> BaseResp
	16, // 32: PushRequest.msg_body:type_name -> MessageBody
	5,  // 33: PushResponse.baseResp:type_name -> BaseResp
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_proto_im_proto_init() }
func file_proto_im_proto_init() {
	if File_proto_im_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_im_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageSendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageGetByInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageGetByInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageGetByConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageGetByConversationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationCoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationSettingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConversationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationCoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationCoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConversationMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConversationMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrConversationBadgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrConversationBadgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationBadgesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationBadgesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetReadInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetReadInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendConversationIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendConversationIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullConversationIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullConversationIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendUserConIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendUserConIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullUserConIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullUserConIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendUserCmdIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendUserCmdIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullUserCmdIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullUserCmdIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_im_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[41].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[43].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[45].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[47].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[48].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[49].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[50].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[51].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_im_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_im_proto_goTypes,
		DependencyIndexes: file_proto_im_proto_depIdxs,
		EnumInfos:         file_proto_im_proto_enumTypes,
		MessageInfos:      file_proto_im_proto_msgTypes,
	}.Build()
	File_proto_im_proto = out.File
	file_proto_im_proto_rawDesc = nil
	file_proto_im_proto_goTypes = nil
	file_proto_im_proto_depIdxs = nil
}
