// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.1
// source: proto/im.proto

package im

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConversationType int32

const (
	ConversationType_ConversationType_Not_Use      ConversationType = 0
	ConversationType_ConversationType_One_Chat     ConversationType = 1
	ConversationType_ConversationType_Group_Chat   ConversationType = 2
	ConversationType_ConversationType_Service_Chat ConversationType = 3
	ConversationType_ConversationType_AI_Chat      ConversationType = 4
	ConversationType_ConversationType_System_Chat  ConversationType = 5
)

// Enum value maps for ConversationType.
var (
	ConversationType_name = map[int32]string{
		0: "ConversationType_Not_Use",
		1: "ConversationType_One_Chat",
		2: "ConversationType_Group_Chat",
		3: "ConversationType_Service_Chat",
		4: "ConversationType_AI_Chat",
		5: "ConversationType_System_Chat",
	}
	ConversationType_value = map[string]int32{
		"ConversationType_Not_Use":      0,
		"ConversationType_One_Chat":     1,
		"ConversationType_Group_Chat":   2,
		"ConversationType_Service_Chat": 3,
		"ConversationType_AI_Chat":      4,
		"ConversationType_System_Chat":  5,
	}
)

func (x ConversationType) Enum() *ConversationType {
	p := new(ConversationType)
	*p = x
	return p
}

func (x ConversationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConversationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_im_proto_enumTypes[0].Descriptor()
}

func (ConversationType) Type() protoreflect.EnumType {
	return &file_proto_im_proto_enumTypes[0]
}

func (x ConversationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConversationType.Descriptor instead.
func (ConversationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{0}
}

type MessageType int32

const (
	MessageType_MessageType_Not_Use MessageType = 0
	MessageType_MessageType_Text    MessageType = 1
	MessageType_MessageType_Image   MessageType = 2
	MessageType_MessageType_Video   MessageType = 3
	MessageType_MessageType_Forward MessageType = 4
	MessageType_Message_Type_Cmd    MessageType = 1000
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:    "MessageType_Not_Use",
		1:    "MessageType_Text",
		2:    "MessageType_Image",
		3:    "MessageType_Video",
		4:    "MessageType_Forward",
		1000: "Message_Type_Cmd",
	}
	MessageType_value = map[string]int32{
		"MessageType_Not_Use": 0,
		"MessageType_Text":    1,
		"MessageType_Image":   2,
		"MessageType_Video":   3,
		"MessageType_Forward": 4,
		"Message_Type_Cmd":    1000,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_im_proto_enumTypes[1].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_proto_im_proto_enumTypes[1]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{1}
}

type BaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCode    *int32  `protobuf:"varint,1,opt,name=StateCode,proto3,oneof" json:"StateCode,omitempty"`
	StateMessage *string `protobuf:"bytes,2,opt,name=StateMessage,proto3,oneof" json:"StateMessage,omitempty"`
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{0}
}

func (x *BaseResp) GetStateCode() int32 {
	if x != nil && x.StateCode != nil {
		return *x.StateCode
	}
	return 0
}

func (x *BaseResp) GetStateMessage() string {
	if x != nil && x.StateMessage != nil {
		return *x.StateMessage
	}
	return ""
}

// TODO:message proto
type MessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           *int64  `protobuf:"varint,1,opt,name=UserId,proto3,oneof" json:"UserId,omitempty"`
	ConvId           *string `protobuf:"bytes,2,opt,name=ConvId,proto3,oneof" json:"ConvId,omitempty"`
	ConvShortId      *int64  `protobuf:"varint,3,opt,name=ConvShortId,proto3,oneof" json:"ConvShortId,omitempty"`
	ConvType         *int32  `protobuf:"varint,4,opt,name=ConvType,proto3,oneof" json:"ConvType,omitempty"`
	MsgId            *int64  `protobuf:"varint,5,opt,name=MsgId,proto3,oneof" json:"MsgId,omitempty"`
	MsgType          *int32  `protobuf:"varint,6,opt,name=MsgType,proto3,oneof" json:"MsgType,omitempty"`
	MsgContent       *string `protobuf:"bytes,7,opt,name=MsgContent,proto3,oneof" json:"MsgContent,omitempty"`
	CreateTime       *int64  `protobuf:"varint,8,opt,name=CreateTime,proto3,oneof" json:"CreateTime,omitempty"`
	ConvIndex        *int64  `protobuf:"varint,9,opt,name=ConvIndex,proto3,oneof" json:"ConvIndex,omitempty"`
	Stored           *bool   `protobuf:"varint,10,opt,name=Stored,proto3,oneof" json:"Stored,omitempty"`
	UserConvIndex    *int64  `protobuf:"varint,11,opt,name=userConvIndex,proto3,oneof" json:"userConvIndex,omitempty"`
	PreUserConvIndex *int64  `protobuf:"varint,12,opt,name=preUserConvIndex,proto3,oneof" json:"preUserConvIndex,omitempty"`
	UserCmdIndex     *int64  `protobuf:"varint,13,opt,name=userCmdIndex,proto3,oneof" json:"userCmdIndex,omitempty"`
	RetryCount       *int32  `protobuf:"varint,14,opt,name=RetryCount,proto3,oneof" json:"RetryCount,omitempty"`
}

func (x *MessageEvent) Reset() {
	*x = MessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEvent) ProtoMessage() {}

func (x *MessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEvent.ProtoReflect.Descriptor instead.
func (*MessageEvent) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{1}
}

func (x *MessageEvent) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *MessageEvent) GetConvId() string {
	if x != nil && x.ConvId != nil {
		return *x.ConvId
	}
	return ""
}

func (x *MessageEvent) GetConvShortId() int64 {
	if x != nil && x.ConvShortId != nil {
		return *x.ConvShortId
	}
	return 0
}

func (x *MessageEvent) GetConvType() int32 {
	if x != nil && x.ConvType != nil {
		return *x.ConvType
	}
	return 0
}

func (x *MessageEvent) GetMsgId() int64 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

func (x *MessageEvent) GetMsgType() int32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *MessageEvent) GetMsgContent() string {
	if x != nil && x.MsgContent != nil {
		return *x.MsgContent
	}
	return ""
}

func (x *MessageEvent) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *MessageEvent) GetConvIndex() int64 {
	if x != nil && x.ConvIndex != nil {
		return *x.ConvIndex
	}
	return 0
}

func (x *MessageEvent) GetStored() bool {
	if x != nil && x.Stored != nil {
		return *x.Stored
	}
	return false
}

func (x *MessageEvent) GetUserConvIndex() int64 {
	if x != nil && x.UserConvIndex != nil {
		return *x.UserConvIndex
	}
	return 0
}

func (x *MessageEvent) GetPreUserConvIndex() int64 {
	if x != nil && x.PreUserConvIndex != nil {
		return *x.PreUserConvIndex
	}
	return 0
}

func (x *MessageEvent) GetUserCmdIndex() int64 {
	if x != nil && x.UserCmdIndex != nil {
		return *x.UserCmdIndex
	}
	return 0
}

func (x *MessageEvent) GetRetryCount() int32 {
	if x != nil && x.RetryCount != nil {
		return *x.RetryCount
	}
	return 0
}

type MessageBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *int64  `protobuf:"varint,1,opt,name=UserId,proto3,oneof" json:"UserId,omitempty"`
	ConvId      *string `protobuf:"bytes,2,opt,name=ConvId,proto3,oneof" json:"ConvId,omitempty"`
	ConvShortId *int64  `protobuf:"varint,3,opt,name=ConvShortId,proto3,oneof" json:"ConvShortId,omitempty"`
	ConvType    *int32  `protobuf:"varint,4,opt,name=ConvType,proto3,oneof" json:"ConvType,omitempty"`
	MsgId       *int64  `protobuf:"varint,5,opt,name=MsgId,proto3,oneof" json:"MsgId,omitempty"`
	MsgType     *int32  `protobuf:"varint,6,opt,name=MsgType,proto3,oneof" json:"MsgType,omitempty"`
	MsgContent  *string `protobuf:"bytes,7,opt,name=MsgContent,proto3,oneof" json:"MsgContent,omitempty"`
	CreateTime  *int64  `protobuf:"varint,8,opt,name=CreateTime,proto3,oneof" json:"CreateTime,omitempty"`
}

func (x *MessageBody) Reset() {
	*x = MessageBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageBody) ProtoMessage() {}

func (x *MessageBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageBody.ProtoReflect.Descriptor instead.
func (*MessageBody) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{2}
}

func (x *MessageBody) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *MessageBody) GetConvId() string {
	if x != nil && x.ConvId != nil {
		return *x.ConvId
	}
	return ""
}

func (x *MessageBody) GetConvShortId() int64 {
	if x != nil && x.ConvShortId != nil {
		return *x.ConvShortId
	}
	return 0
}

func (x *MessageBody) GetConvType() int32 {
	if x != nil && x.ConvType != nil {
		return *x.ConvType
	}
	return 0
}

func (x *MessageBody) GetMsgId() int64 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

func (x *MessageBody) GetMsgType() int32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *MessageBody) GetMsgContent() string {
	if x != nil && x.MsgContent != nil {
		return *x.MsgContent
	}
	return ""
}

func (x *MessageBody) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvId      *string `protobuf:"bytes,1,opt,name=ConvId,proto3,oneof" json:"ConvId,omitempty"`
	ConvShortId *int64  `protobuf:"varint,2,opt,name=ConvShortId,proto3,oneof" json:"ConvShortId,omitempty"`
	ConvType    *int32  `protobuf:"varint,3,opt,name=ConvType,proto3,oneof" json:"ConvType,omitempty"`
	MsgType     *int32  `protobuf:"varint,4,opt,name=MsgType,proto3,oneof" json:"MsgType,omitempty"`
	MsgContent  *string `protobuf:"bytes,5,opt,name=MsgContent,proto3,oneof" json:"MsgContent,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{3}
}

func (x *SendMessageRequest) GetConvId() string {
	if x != nil && x.ConvId != nil {
		return *x.ConvId
	}
	return ""
}

func (x *SendMessageRequest) GetConvShortId() int64 {
	if x != nil && x.ConvShortId != nil {
		return *x.ConvShortId
	}
	return 0
}

func (x *SendMessageRequest) GetConvType() int32 {
	if x != nil && x.ConvType != nil {
		return *x.ConvType
	}
	return 0
}

func (x *SendMessageRequest) GetMsgType() int32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *SendMessageRequest) GetMsgContent() string {
	if x != nil && x.MsgContent != nil {
		return *x.MsgContent
	}
	return ""
}

type SendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{4}
}

func (x *SendMessageResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type GetMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvShortId *int64  `protobuf:"varint,1,opt,name=ConvShortId,proto3,oneof" json:"ConvShortId,omitempty"`
	MsgIds      []int64 `protobuf:"varint,2,rep,packed,name=MsgIds,proto3" json:"MsgIds,omitempty"`
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{5}
}

func (x *GetMessagesRequest) GetConvShortId() int64 {
	if x != nil && x.ConvShortId != nil {
		return *x.ConvShortId
	}
	return 0
}

func (x *GetMessagesRequest) GetMsgIds() []int64 {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

type GetMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgBodies []*MessageBody `protobuf:"bytes,1,rep,name=MsgBodies,proto3" json:"MsgBodies,omitempty"`
}

func (x *GetMessagesResponse) Reset() {
	*x = GetMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesResponse) ProtoMessage() {}

func (x *GetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{6}
}

func (x *GetMessagesResponse) GetMsgBodies() []*MessageBody {
	if x != nil {
		return x.MsgBodies
	}
	return nil
}

type SaveMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgBody *MessageBody `protobuf:"bytes,1,opt,name=MsgBody,proto3,oneof" json:"MsgBody,omitempty"`
}

func (x *SaveMessageRequest) Reset() {
	*x = SaveMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMessageRequest) ProtoMessage() {}

func (x *SaveMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMessageRequest.ProtoReflect.Descriptor instead.
func (*SaveMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{7}
}

func (x *SaveMessageRequest) GetMsgBody() *MessageBody {
	if x != nil {
		return x.MsgBody
	}
	return nil
}

type SaveMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3,oneof" json:"baseResp,omitempty"`
}

func (x *SaveMessageResponse) Reset() {
	*x = SaveMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMessageResponse) ProtoMessage() {}

func (x *SaveMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMessageResponse.ProtoReflect.Descriptor instead.
func (*SaveMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{8}
}

func (x *SaveMessageResponse) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

// TODO:conversation proto
type CreateConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvId   *string `protobuf:"bytes,1,opt,name=ConvId,proto3,oneof" json:"ConvId,omitempty"`
	ConvType *int32  `protobuf:"varint,2,opt,name=ConvType,proto3,oneof" json:"ConvType,omitempty"`
	OwnerId  *int64  `protobuf:"varint,3,opt,name=OwnerId,proto3,oneof" json:"OwnerId,omitempty"`
}

func (x *CreateConversationRequest) Reset() {
	*x = CreateConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationRequest) ProtoMessage() {}

func (x *CreateConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationRequest.ProtoReflect.Descriptor instead.
func (*CreateConversationRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{9}
}

func (x *CreateConversationRequest) GetConvId() string {
	if x != nil && x.ConvId != nil {
		return *x.ConvId
	}
	return ""
}

func (x *CreateConversationRequest) GetConvType() int32 {
	if x != nil && x.ConvType != nil {
		return *x.ConvType
	}
	return 0
}

func (x *CreateConversationRequest) GetOwnerId() int64 {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return 0
}

type CreateConversationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvShortId *int64  `protobuf:"varint,1,opt,name=ConvShortId,proto3,oneof" json:"ConvShortId,omitempty"`
	ConvInfo    *string `protobuf:"bytes,2,opt,name=ConvInfo,proto3,oneof" json:"ConvInfo,omitempty"`
}

func (x *CreateConversationResponse) Reset() {
	*x = CreateConversationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationResponse) ProtoMessage() {}

func (x *CreateConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationResponse.ProtoReflect.Descriptor instead.
func (*CreateConversationResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{10}
}

func (x *CreateConversationResponse) GetConvShortId() int64 {
	if x != nil && x.ConvShortId != nil {
		return *x.ConvShortId
	}
	return 0
}

func (x *CreateConversationResponse) GetConvInfo() string {
	if x != nil && x.ConvInfo != nil {
		return *x.ConvInfo
	}
	return ""
}

// TODO:index proto
type AppendConversationIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvShortId *int64 `protobuf:"varint,1,opt,name=ConvShortId,proto3,oneof" json:"ConvShortId,omitempty"`
	MsgId       *int64 `protobuf:"varint,2,opt,name=MsgId,proto3,oneof" json:"MsgId,omitempty"`
}

func (x *AppendConversationIndexRequest) Reset() {
	*x = AppendConversationIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendConversationIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendConversationIndexRequest) ProtoMessage() {}

func (x *AppendConversationIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendConversationIndexRequest.ProtoReflect.Descriptor instead.
func (*AppendConversationIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{11}
}

func (x *AppendConversationIndexRequest) GetConvShortId() int64 {
	if x != nil && x.ConvShortId != nil {
		return *x.ConvShortId
	}
	return 0
}

func (x *AppendConversationIndexRequest) GetMsgId() int64 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

type AppendConversationIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvIndex *int64 `protobuf:"varint,1,opt,name=ConvIndex,proto3,oneof" json:"ConvIndex,omitempty"`
}

func (x *AppendConversationIndexResponse) Reset() {
	*x = AppendConversationIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendConversationIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendConversationIndexResponse) ProtoMessage() {}

func (x *AppendConversationIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendConversationIndexResponse.ProtoReflect.Descriptor instead.
func (*AppendConversationIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{12}
}

func (x *AppendConversationIndexResponse) GetConvIndex() int64 {
	if x != nil && x.ConvIndex != nil {
		return *x.ConvIndex
	}
	return 0
}

type PullConversationIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvShortId *int64 `protobuf:"varint,1,opt,name=ConvShortId,proto3,oneof" json:"ConvShortId,omitempty"`
	ConvIndex   *int64 `protobuf:"varint,2,opt,name=ConvIndex,proto3,oneof" json:"ConvIndex,omitempty"`
	Limit       *int64 `protobuf:"varint,3,opt,name=Limit,proto3,oneof" json:"Limit,omitempty"`
}

func (x *PullConversationIndexRequest) Reset() {
	*x = PullConversationIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullConversationIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullConversationIndexRequest) ProtoMessage() {}

func (x *PullConversationIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullConversationIndexRequest.ProtoReflect.Descriptor instead.
func (*PullConversationIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{13}
}

func (x *PullConversationIndexRequest) GetConvShortId() int64 {
	if x != nil && x.ConvShortId != nil {
		return *x.ConvShortId
	}
	return 0
}

func (x *PullConversationIndexRequest) GetConvIndex() int64 {
	if x != nil && x.ConvIndex != nil {
		return *x.ConvIndex
	}
	return 0
}

func (x *PullConversationIndexRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type PullConversationIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgIds []int64 `protobuf:"varint,1,rep,packed,name=MsgIds,proto3" json:"MsgIds,omitempty"`
}

func (x *PullConversationIndexResponse) Reset() {
	*x = PullConversationIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullConversationIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullConversationIndexResponse) ProtoMessage() {}

func (x *PullConversationIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullConversationIndexResponse.ProtoReflect.Descriptor instead.
func (*PullConversationIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{14}
}

func (x *PullConversationIndexResponse) GetMsgIds() []int64 {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

type AppendUserConvIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *int64 `protobuf:"varint,1,opt,name=UserId,proto3,oneof" json:"UserId,omitempty"`
	ConvShortId *int64 `protobuf:"varint,2,opt,name=ConvShortId,proto3,oneof" json:"ConvShortId,omitempty"`
}

func (x *AppendUserConvIndexRequest) Reset() {
	*x = AppendUserConvIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendUserConvIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendUserConvIndexRequest) ProtoMessage() {}

func (x *AppendUserConvIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendUserConvIndexRequest.ProtoReflect.Descriptor instead.
func (*AppendUserConvIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{15}
}

func (x *AppendUserConvIndexRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *AppendUserConvIndexRequest) GetConvShortId() int64 {
	if x != nil && x.ConvShortId != nil {
		return *x.ConvShortId
	}
	return 0
}

type AppendUserConvIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserConvIndex    *int64 `protobuf:"varint,1,opt,name=UserConvIndex,proto3,oneof" json:"UserConvIndex,omitempty"`
	PreUserConvIndex *int64 `protobuf:"varint,2,opt,name=PreUserConvIndex,proto3,oneof" json:"PreUserConvIndex,omitempty"`
}

func (x *AppendUserConvIndexResponse) Reset() {
	*x = AppendUserConvIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendUserConvIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendUserConvIndexResponse) ProtoMessage() {}

func (x *AppendUserConvIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendUserConvIndexResponse.ProtoReflect.Descriptor instead.
func (*AppendUserConvIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{16}
}

func (x *AppendUserConvIndexResponse) GetUserConvIndex() int64 {
	if x != nil && x.UserConvIndex != nil {
		return *x.UserConvIndex
	}
	return 0
}

func (x *AppendUserConvIndexResponse) GetPreUserConvIndex() int64 {
	if x != nil && x.PreUserConvIndex != nil {
		return *x.PreUserConvIndex
	}
	return 0
}

type AppendUserCmdIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *int64 `protobuf:"varint,1,opt,name=UserId,proto3,oneof" json:"UserId,omitempty"`
	MsgId  *int64 `protobuf:"varint,2,opt,name=MsgId,proto3,oneof" json:"MsgId,omitempty"`
}

func (x *AppendUserCmdIndexRequest) Reset() {
	*x = AppendUserCmdIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendUserCmdIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendUserCmdIndexRequest) ProtoMessage() {}

func (x *AppendUserCmdIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendUserCmdIndexRequest.ProtoReflect.Descriptor instead.
func (*AppendUserCmdIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{17}
}

func (x *AppendUserCmdIndexRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *AppendUserCmdIndexRequest) GetMsgId() int64 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

type AppendUserCmdIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserCmdIndex *int64 `protobuf:"varint,1,opt,name=UserCmdIndex,proto3,oneof" json:"UserCmdIndex,omitempty"`
}

func (x *AppendUserCmdIndexResponse) Reset() {
	*x = AppendUserCmdIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_im_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendUserCmdIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendUserCmdIndexResponse) ProtoMessage() {}

func (x *AppendUserCmdIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_im_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendUserCmdIndexResponse.ProtoReflect.Descriptor instead.
func (*AppendUserCmdIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_im_proto_rawDescGZIP(), []int{18}
}

func (x *AppendUserCmdIndexResponse) GetUserCmdIndex() int64 {
	if x != nil && x.UserCmdIndex != nil {
		return *x.UserCmdIndex
	}
	return 0
}

var File_proto_im_proto protoreflect.FileDescriptor

var file_proto_im_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x75, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x09,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc5, 0x05, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x43, 0x6f, 0x6e,
	0x76, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x08, 0x43,
	0x6f, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x05, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x4d, 0x73, 0x67, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x08, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x09, 0x52, 0x06, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29,
	0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x70, 0x72, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x10, 0x70, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x0c, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0d, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x4d, 0x73, 0x67, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70,
	0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xfa, 0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06,
	0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x43, 0x6f, 0x6e,
	0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02,
	0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x03, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x04, 0x52, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52,
	0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x4d,
	0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x06, 0x52, 0x0a, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x43, 0x6f, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x80, 0x02, 0x0a,
	0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x76, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x08, 0x43, 0x6f, 0x6e,
	0x76, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x07, 0x4d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x4d,
	0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x43, 0x6f, 0x6e, 0x76,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x6f, 0x6e, 0x76,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x4e, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x43, 0x6f,
	0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06,
	0x4d, 0x73, 0x67, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x4d,
	0x73, 0x67, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x09, 0x4d, 0x73,
	0x67, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x07, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x07,
	0x4d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d,
	0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x4e, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x9c, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x43, 0x6f, 0x6e,
	0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x43,
	0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x08, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7c, 0x0a, 0x1e, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x1f, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x09, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xab, 0x01, 0x0a, 0x1c,
	0x50, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0b,
	0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x37, 0x0a, 0x1d, 0x50, 0x75, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x4d, 0x73, 0x67, 0x49,
	0x64, 0x73, 0x22, 0x7b, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x43, 0x6f, 0x6e, 0x76, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22,
	0xa0, 0x01, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x50, 0x72,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x10, 0x50, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x50, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x68, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x05, 0x4d,
	0x73, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1a,
	0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6d, 0x64, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x2a, 0xd3, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f,
	0x74, 0x5f, 0x55, 0x73, 0x65, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x6e, 0x65, 0x5f,
	0x43, 0x68, 0x61, 0x74, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x43, 0x68, 0x61, 0x74, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x43, 0x68, 0x61, 0x74, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41,
	0x49, 0x5f, 0x43, 0x68, 0x61, 0x74, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x43, 0x68, 0x61, 0x74, 0x10, 0x05, 0x2a, 0x9a, 0x01, 0x0a, 0x0b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f, 0x74, 0x5f, 0x55, 0x73,
	0x65, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x10, 0x04,
	0x12, 0x15, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x43, 0x6d, 0x64, 0x10, 0xe8, 0x07, 0x42, 0x31, 0x0a, 0x20, 0x76, 0x69, 0x6f, 0x6c, 0x65,
	0x74, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x69, 0x6d, 0x5a, 0x0d, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_im_proto_rawDescOnce sync.Once
	file_proto_im_proto_rawDescData = file_proto_im_proto_rawDesc
)

func file_proto_im_proto_rawDescGZIP() []byte {
	file_proto_im_proto_rawDescOnce.Do(func() {
		file_proto_im_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_im_proto_rawDescData)
	})
	return file_proto_im_proto_rawDescData
}

var file_proto_im_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_im_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_im_proto_goTypes = []interface{}{
	(ConversationType)(0),                   // 0: ConversationType
	(MessageType)(0),                        // 1: MessageType
	(*BaseResp)(nil),                        // 2: BaseResp
	(*MessageEvent)(nil),                    // 3: MessageEvent
	(*MessageBody)(nil),                     // 4: MessageBody
	(*SendMessageRequest)(nil),              // 5: SendMessageRequest
	(*SendMessageResponse)(nil),             // 6: SendMessageResponse
	(*GetMessagesRequest)(nil),              // 7: GetMessagesRequest
	(*GetMessagesResponse)(nil),             // 8: GetMessagesResponse
	(*SaveMessageRequest)(nil),              // 9: SaveMessageRequest
	(*SaveMessageResponse)(nil),             // 10: SaveMessageResponse
	(*CreateConversationRequest)(nil),       // 11: CreateConversationRequest
	(*CreateConversationResponse)(nil),      // 12: CreateConversationResponse
	(*AppendConversationIndexRequest)(nil),  // 13: AppendConversationIndexRequest
	(*AppendConversationIndexResponse)(nil), // 14: AppendConversationIndexResponse
	(*PullConversationIndexRequest)(nil),    // 15: PullConversationIndexRequest
	(*PullConversationIndexResponse)(nil),   // 16: PullConversationIndexResponse
	(*AppendUserConvIndexRequest)(nil),      // 17: AppendUserConvIndexRequest
	(*AppendUserConvIndexResponse)(nil),     // 18: AppendUserConvIndexResponse
	(*AppendUserCmdIndexRequest)(nil),       // 19: AppendUserCmdIndexRequest
	(*AppendUserCmdIndexResponse)(nil),      // 20: AppendUserCmdIndexResponse
}
var file_proto_im_proto_depIdxs = []int32{
	2, // 0: SendMessageResponse.baseResp:type_name -> BaseResp
	4, // 1: GetMessagesResponse.MsgBodies:type_name -> MessageBody
	4, // 2: SaveMessageRequest.MsgBody:type_name -> MessageBody
	2, // 3: SaveMessageResponse.baseResp:type_name -> BaseResp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_im_proto_init() }
func file_proto_im_proto_init() {
	if File_proto_im_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_im_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConversationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendConversationIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendConversationIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullConversationIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullConversationIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendUserConvIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendUserConvIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendUserCmdIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_im_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendUserCmdIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_im_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_proto_im_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_im_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_im_proto_goTypes,
		DependencyIndexes: file_proto_im_proto_depIdxs,
		EnumInfos:         file_proto_im_proto_enumTypes,
		MessageInfos:      file_proto_im_proto_msgTypes,
	}.Build()
	File_proto_im_proto = out.File
	file_proto_im_proto_rawDesc = nil
	file_proto_im_proto_goTypes = nil
	file_proto_im_proto_depIdxs = nil
}
